// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.2.0 DO NOT EDIT.
package server

// Defines values for Status.
const (
	HEALTHY   Status = "HEALTHY"
	UNHEALTHY Status = "UNHEALTHY"
	UNKNOWN   Status = "UNKNOWN"
)

// EmailPlaceholders defines model for EmailPlaceholders.
type EmailPlaceholders struct {
	Placeholders []struct {
		Data *[]struct {
			Key   string `json:"key"`
			Value string `json:"value"`
		} `json:"data,omitempty"`
	} `json:"placeholders"`
}

// EmailSendRequest defines model for EmailSendRequest.
type EmailSendRequest struct {
	Attachments *[]struct {
		AttachmentContent   string `json:"attachmentContent"`
		AttachmentExtension string `json:"attachmentExtension"`
		AttachmentName      string `json:"attachmentName"`
	} `json:"attachments,omitempty"`
	Message string `json:"message"`
	Subject string `json:"subject"`
	ToEmail string `json:"toEmail"`
	ToName  string `json:"toName"`
}

// EmailTemplate defines model for EmailTemplate.
type EmailTemplate struct {
	Name             string `json:"name"`
	TemplateMJMLCode string `json:"templateMJMLCode"`
}

// EmailTemplateFillSendRequest defines model for EmailTemplateFillSendRequest.
type EmailTemplateFillSendRequest struct {
	Attachments *[]struct {
		AttachmentContent   string `json:"attachmentContent"`
		AttachmentExtension string `json:"attachmentExtension"`
		AttachmentName      string `json:"attachmentName"`
	} `json:"attachments,omitempty"`
	Placeholders map[string]string `json:"placeholders"`
	Subject      string            `json:"subject"`
	ToEmail      string            `json:"toEmail"`
	ToName       string            `json:"toName"`
}

// EmailTemplatePostRequest defines model for EmailTemplatePostRequest.
type EmailTemplatePostRequest struct {
	IsMJML         bool   `json:"isMJML"`
	TemplateString string `json:"templateString"`
}

// FillTemplate A request to fill a template with placeholders.
type FillTemplate struct {
	Placeholders *map[string]string `json:"placeholders,omitempty"`
	TemplateName *string            `json:"templateName,omitempty"`
}

// FilledEmailTemplateResponse defines model for FilledEmailTemplateResponse.
type FilledEmailTemplateResponse = string

// GetWorkflowResponse defines model for GetWorkflowResponse.
type GetWorkflowResponse struct {
	EmailSubject      string         `json:"emailSubject"`
	EmailTemplate     TemplateInfo   `json:"emailTemplate"`
	Name              string         `json:"name"`
	PdfTemplates      []TemplateInfo `json:"pdfTemplates"`
	StaticAttachments []string       `json:"staticAttachments"`
}

// PDFFilledTemplateResponse defines model for PDFFilledTemplateResponse.
type PDFFilledTemplateResponse = string

// PDFPlaceholders defines model for PDFPlaceholders.
type PDFPlaceholders struct {
	Placeholders []struct {
		Data *[]struct {
			Key   string `json:"key"`
			Value string `json:"value"`
		} `json:"data,omitempty"`
	} `json:"placeholders"`
}

// PDFTemplate defines model for PDFTemplate.
type PDFTemplate struct {
	Name           string `json:"name"`
	TemplateString string `json:"templateString"`
}

// PDFTemplatePostRequest defines model for PDFTemplatePostRequest.
type PDFTemplatePostRequest struct {
	TemplateString string `json:"templateString"`
}

// Placeholder defines model for Placeholder.
type Placeholder map[string]string

// PresignedURL defines model for PresignedURL.
type PresignedURL struct {
	Url string `json:"url"`
}

// SMSFilledTemplateResponse defines model for SMSFilledTemplateResponse.
type SMSFilledTemplateResponse = string

// SMSPlaceholders defines model for SMSPlaceholders.
type SMSPlaceholders struct {
	Placeholders []struct {
		Data *[]struct {
			Key   string `json:"key"`
			Value string `json:"value"`
		} `json:"data,omitempty"`
	} `json:"placeholders"`
}

// SMSSendRequest defines model for SMSSendRequest.
type SMSSendRequest struct {
	Message             string `json:"message"`
	ReceiverPhoneNumber string `json:"receiverPhoneNumber"`
}

// SMSTemplate defines model for SMSTemplate.
type SMSTemplate struct {
	Name           string `json:"name"`
	TemplateString string `json:"templateString"`
}

// SMSTemplatePostRequest defines model for SMSTemplatePostRequest.
type SMSTemplatePostRequest struct {
	TemplateString string `json:"templateString"`
}

// SMSTemplateSendRequest defines model for SMSTemplateSendRequest.
type SMSTemplateSendRequest struct {
	Placeholders        Placeholder `json:"placeholders"`
	ReceiverPhoneNumber string      `json:"receiverPhoneNumber"`
}

// Status The status of the API
type Status string

// TemplateFillRequest defines model for TemplateFillRequest.
type TemplateFillRequest struct {
	Placeholders Placeholder `json:"placeholders"`
}

// TemplateInfo defines model for TemplateInfo.
type TemplateInfo struct {
	Placeholders []string `json:"placeholders"`
	TemplateName string   `json:"templateName"`
}

// Version This object holds the API version data.
type Version struct {
	// BuildDate The date the code was built
	BuildDate string `json:"buildDate"`

	// CommitDate The date of the commit
	CommitDate string `json:"commitDate"`

	// CommitHash The hash of the commit
	CommitHash string `json:"commitHash"`

	// Details A description of the API
	Details string `json:"details"`

	// Version The version of the API
	Version string `json:"version"`
}

// WorkflowCreateRequest defines model for WorkflowCreateRequest.
type WorkflowCreateRequest struct {
	EmailSubject             string   `json:"emailSubject"`
	EmailTemplateName        string   `json:"emailTemplateName"`
	StaticAttachmentNames    []string `json:"staticAttachmentNames"`
	TemplatedAttachmentNames []string `json:"templatedAttachmentNames"`
}

// WorkflowSendRequest defines model for WorkflowSendRequest.
type WorkflowSendRequest struct {
	// EmailTemplate A request to fill a template with placeholders.
	EmailTemplate FillTemplate    `json:"emailTemplate"`
	PdfTemplates  *[]FillTemplate `json:"pdfTemplates,omitempty"`
	ToEmail       string          `json:"toEmail"`
	ToName        string          `json:"toName"`
}

// SendEmailJSONRequestBody defines body for SendEmail for application/json ContentType.
type SendEmailJSONRequestBody = EmailSendRequest

// AddNewTemplateJSONRequestBody defines body for AddNewTemplate for application/json ContentType.
type AddNewTemplateJSONRequestBody = EmailTemplatePostRequest

// FillTemplateJSONRequestBody defines body for FillTemplate for application/json ContentType.
type FillTemplateJSONRequestBody = TemplateFillRequest

// SendTemplatedEmailJSONRequestBody defines body for SendTemplatedEmail for application/json ContentType.
type SendTemplatedEmailJSONRequestBody = EmailTemplateFillSendRequest

// AddNewPDFTemplateJSONRequestBody defines body for AddNewPDFTemplate for application/json ContentType.
type AddNewPDFTemplateJSONRequestBody = PDFTemplatePostRequest

// FillPDFTemplateJSONRequestBody defines body for FillPDFTemplate for application/json ContentType.
type FillPDFTemplateJSONRequestBody = TemplateFillRequest

// SendBasicSMSJSONRequestBody defines body for SendBasicSMS for application/json ContentType.
type SendBasicSMSJSONRequestBody = SMSSendRequest

// SendTemplatedSMSJSONRequestBody defines body for SendTemplatedSMS for application/json ContentType.
type SendTemplatedSMSJSONRequestBody = SMSTemplateSendRequest

// AddNewSMSTemplateJSONRequestBody defines body for AddNewSMSTemplate for application/json ContentType.
type AddNewSMSTemplateJSONRequestBody = SMSTemplatePostRequest

// FillSMSTemplateJSONRequestBody defines body for FillSMSTemplate for application/json ContentType.
type FillSMSTemplateJSONRequestBody = SMSTemplateSendRequest

// CreateWorkflowJSONRequestBody defines body for CreateWorkflow for application/json ContentType.
type CreateWorkflowJSONRequestBody = WorkflowCreateRequest

// UseWorkflowJSONRequestBody defines body for UseWorkflow for application/json ContentType.
type UseWorkflowJSONRequestBody = WorkflowSendRequest
