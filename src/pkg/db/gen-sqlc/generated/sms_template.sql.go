// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: sms_template.sql

package repo_sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const addSMSTemplate = `-- name: AddSMSTemplate :one
INSERT INTO smstemplates (
    name, templ_string
) VALUES (
    $1, $2
)
RETURNING id, name, templ_string, created_at
`

type AddSMSTemplateParams struct {
	Name        pgtype.Text
	TemplString pgtype.Text
}

func (q *Queries) AddSMSTemplate(ctx context.Context, arg AddSMSTemplateParams) (Smstemplate, error) {
	row := q.db.QueryRow(ctx, addSMSTemplate, arg.Name, arg.TemplString)
	var i Smstemplate
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.TemplString,
		&i.CreatedAt,
	)
	return i, err
}

const getSMSTemplateByName = `-- name: GetSMSTemplateByName :one
SELECT id, name, templ_string, created_at FROM smstemplates
WHERE name = $1 LIMIT 1
`

func (q *Queries) GetSMSTemplateByName(ctx context.Context, name pgtype.Text) (Smstemplate, error) {
	row := q.db.QueryRow(ctx, getSMSTemplateByName, name)
	var i Smstemplate
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.TemplString,
		&i.CreatedAt,
	)
	return i, err
}
