// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: pdf_template.sql

package repo_sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const addPDFTemplate = `-- name: AddPDFTemplate :one
INSERT INTO pdftemplates (
    name, templ_string
) VALUES (
    $1, $2
)
RETURNING id, name, templ_string, created_at
`

type AddPDFTemplateParams struct {
	Name        pgtype.Text
	TemplString pgtype.Text
}

func (q *Queries) AddPDFTemplate(ctx context.Context, arg AddPDFTemplateParams) (Pdftemplate, error) {
	row := q.db.QueryRow(ctx, addPDFTemplate, arg.Name, arg.TemplString)
	var i Pdftemplate
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.TemplString,
		&i.CreatedAt,
	)
	return i, err
}

const getPDFTemplateByName = `-- name: GetPDFTemplateByName :one
SELECT id, name, templ_string, created_at FROM pdftemplates
WHERE name = $1 LIMIT 1
`

func (q *Queries) GetPDFTemplateByName(ctx context.Context, name pgtype.Text) (Pdftemplate, error) {
	row := q.db.QueryRow(ctx, getPDFTemplateByName, name)
	var i Pdftemplate
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.TemplString,
		&i.CreatedAt,
	)
	return i, err
}
